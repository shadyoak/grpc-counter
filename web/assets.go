// Code generated by go-bindata.
// sources:
// web/static/index.html
// web/static/script.js
// web/static/style.css
// DO NOT EDIT!

package web

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _webStaticIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x53\x4d\x8f\xd3\x30\x10\x3d\x77\x7f\x85\xb1\xb4\xda\xf6\xd0\x58\x20\x21\x21\x70\x7a\xa0\x2c\x02\x09\xc4\xaa\x74\x0f\x1c\x5d\x7b\xda\xb8\x38\x76\x64\x4f\x56\x1b\xd0\xfe\x77\xc6\x49\x36\x5b\x96\x0f\x21\x71\x71\x3c\x6f\xe6\x8d\xdf\x3c\x3b\xf2\xc9\x9b\x4f\xeb\xed\x97\xab\x4b\x56\x61\xed\x56\x67\x32\x7f\x98\x53\xfe\x50\x72\xf0\x3c\x03\xa0\xcc\xea\x6c\x26\x6b\x40\xc5\x74\xa5\x62\x02\x2c\xf9\xf5\xf6\xed\xf2\x05\xcf\x38\x5a\x74\xb0\x3a\x6c\xae\xd6\x6c\x1d\x5a\x8f\x10\xa5\x18\x30\x4a\x3a\xeb\xbf\xb2\x08\xae\xe4\x09\x3b\x07\xa9\x02\x40\xce\x6a\x30\x56\x95\x5c\x39\xc7\x59\x15\x61\x3f\x66\x0b\x9d\x12\x67\x22\xf3\x92\x8e\xb6\x41\x96\xa2\x2e\xb9\x20\xbe\xea\x22\x5f\x49\x31\xc0\x8f\x0b\x2a\xc4\xe6\xa5\x10\xda\xf8\x63\x2a\xb4\x0b\xad\xd9\x3b\x15\xa9\x5d\xa8\x85\x3a\xaa\x5b\xe1\xec\x2e\x89\xd6\x1b\x88\x49\x07\x4a\x1c\x93\x78\x5a\x3c\x2f\x9e\x9d\x60\xcb\xda\x7a\xc2\x7f\x7b\x08\x76\x0d\x94\x1c\xe1\x16\xc5\x51\xdd\xa8\x01\xcd\xb3\xcf\x36\x59\xd9\x66\x1d\xbc\x07\x8d\x36\xf8\x22\x92\x59\xdd\x7c\xdf\xfa\x3e\x9c\x2f\xd8\x77\xaa\x1a\xcb\x8a\xde\x9e\x7e\x4f\x2a\x2d\x78\x24\x85\xbd\x61\xd7\x8d\x51\x08\x86\x95\x6c\x62\xf6\x99\x91\x3e\x33\x41\xb7\x75\xae\x3f\x00\x5e\x3a\xc8\xdb\xd7\xdd\x7b\x33\xbf\x18\xf9\x17\x8b\xc2\x92\x84\xf8\x6e\xfb\xf1\x03\x35\xe9\xd1\x57\x99\x79\x97\xd7\xbb\x05\xad\x0f\x63\x49\x31\xdc\xa8\xdc\x05\xd3\xe5\x29\x8d\xbd\x61\xd6\x94\x7c\x6c\x96\x2d\x20\xe8\x3e\xa3\x9d\x4a\x69\x4c\x4e\xa9\x07\x6f\x26\xe2\x12\xa1\x6e\x1c\x8d\xc1\x4f\xfd\x9a\xc0\xec\x96\x4c\x8d\xf2\x53\xc3\x36\x46\x9a\x83\x61\x68\x98\x3c\x27\xd1\x43\xfc\xd9\x7e\x03\x76\xbe\xa2\x93\x08\x43\x5b\xe7\x80\xb4\x13\xf1\x97\x0e\x9e\x0e\x98\xe8\x39\xf8\x89\x9b\x81\xed\x5f\xf9\xf7\x0a\x76\x01\x31\xd4\xff\x23\xe2\xa4\xc3\x3f\xe9\xf8\xd3\x43\x1e\xf6\x8f\x9e\xa1\x14\xc3\x45\xd1\xbd\xf5\x7f\xe8\x8f\x00\x00\x00\xff\xff\x00\x54\x49\x9e\xb2\x03\x00\x00")

func webStaticIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webStaticIndexHtml,
		"web/static/index.html",
	)
}

func webStaticIndexHtml() (*asset, error) {
	bytes, err := webStaticIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/static/index.html", size: 946, mode: os.FileMode(420), modTime: time.Unix(1467848707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webStaticScriptJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x4d\x6f\x9c\x30\x10\xbd\xef\xaf\xb0\xd4\x83\x71\x4b\x08\x9b\x5b\x16\x6d\xab\xa8\x3d\xf4\x90\x9e\x12\xf5\x5a\xb9\x30\xcb\x5a\x35\x86\x1a\xd3\xec\xb6\xca\x7f\xef\x18\x6c\x30\x6c\x49\xd4\x23\xc3\x9b\x8f\xf7\xde\x8c\xaf\xaf\x49\xa7\x0a\xd0\x6d\x5e\x6b\x20\xb2\xe6\x05\x14\x9b\xcd\xc7\xba\x53\xa6\xa8\x9f\x14\xd9\x93\x43\xa7\x72\x23\x6a\x15\x31\xf2\x67\x43\xc8\xb7\xc8\x1c\x45\xcb\x92\xef\x42\x15\x77\x52\x46\xb4\x6b\x0a\x6e\x80\xc6\x84\xc2\x09\xf2\xce\xc0\x9d\x12\x15\xb7\x19\x36\x76\x10\x4a\xb4\xc7\x29\xc4\x32\xac\x61\x2b\x24\x2d\x98\xaf\x5c\xb7\x09\x6f\x1a\x79\xee\x8b\xc6\x84\xeb\xb2\xab\x40\x99\x76\x82\x0d\xe5\x23\x0c\x3c\x67\xc1\x60\x49\xa3\x6b\x53\x9b\x73\x03\x38\xa2\x9d\xab\xe8\x74\xdf\x61\x47\xb6\x69\x9a\xc6\x1b\x0c\xb9\x0e\xbb\x89\x82\x11\x15\xc4\x04\x64\x4c\x0c\x54\x8d\xc4\xc2\x03\x29\xd7\xab\xe2\x27\xac\x66\x41\xd9\x14\xb4\x9f\x97\x51\x90\x18\x03\x19\xe2\x5c\x45\x8c\xa3\x46\xee\x23\x11\x4a\x81\xfe\xfc\xf8\xe5\x9e\x8d\x80\x88\x05\x59\x05\x48\xc3\x31\xe5\x6a\x6b\x83\xcf\xfd\xdc\x03\xe5\xdd\x52\x79\x97\x91\x1f\x21\xff\xf1\x88\xd3\xcc\xea\x20\xd7\x07\xf1\x1b\x5a\x1b\x9c\x45\xbb\x66\x14\xdf\x27\x0c\x16\x26\x4b\xbb\x98\x1d\x86\x9f\xa3\x9b\x74\x8e\x5b\x58\xe8\x61\xc3\xf8\x4e\x75\xf2\x96\xa4\xc9\xad\xef\xed\x12\x07\x1e\xff\xc4\xb3\x89\xed\xc8\x67\x8d\x70\x6f\xc0\xbb\x7d\xa0\x97\x6b\x23\x0e\x24\x0a\x2c\xda\xef\x49\xca\xe6\xaa\x6e\xb3\x15\xa0\xb7\x9b\x5d\xba\x70\xe1\x0d\xc2\xb7\xe4\x83\x9b\xa5\x2e\x4b\x09\x9f\x84\x86\x61\x50\xdc\x7e\xbb\xe5\x76\x23\x29\x23\xbb\x15\x50\xff\x1b\x61\x08\x9e\xd9\xa3\xe0\x64\x1e\xdd\x7a\x4d\x4c\x67\x44\xbd\x4a\x8b\x9a\x81\x56\xbc\x28\x62\xa2\xa1\xaa\x7f\xcd\x97\x19\x64\x92\x4b\xde\xb6\xf7\xa2\x35\x09\x82\x2c\x90\x65\x2b\xff\x87\xfc\xc8\x95\x99\xda\xfa\xb5\x5a\x5d\xc6\x4e\x6b\xbc\x57\x8b\xf1\x24\xca\x21\x65\x12\x3c\x6c\x6a\x19\xaf\x82\xbd\x1c\x41\x7f\xf7\x7f\x71\xc2\x7e\x04\x8d\xeb\xad\x55\x7f\x9a\xe4\x3d\xb9\x45\x93\x68\x5b\x71\x29\x29\x3a\x41\xe9\x8c\x45\x70\x06\x6b\x5c\x50\x90\xf1\x5a\x47\x47\xfc\xcd\xf6\x8f\xde\x2b\xea\xd1\xfc\xc8\x55\x09\x05\x0d\x08\x2c\x8f\xec\x85\xe6\x73\xb7\x86\x62\x42\x95\x61\xb5\xc5\x29\xfe\x67\x31\x3f\xd9\xab\x14\xa6\xae\xfd\xa3\xab\xe0\x89\x8c\x0f\x6f\x84\xe1\xed\x4d\x6c\x5f\xdc\x3a\xef\x1f\xeb\xe4\x67\x07\xfa\xfc\x00\x12\x57\xb3\xd6\x11\x4d\x72\x8b\xa5\xec\x25\xcc\x9b\x1e\x73\xe5\xe5\xa5\x6c\xc3\xb2\xbf\x01\x00\x00\xff\xff\xb0\x53\x69\x38\x8b\x06\x00\x00")

func webStaticScriptJsBytes() ([]byte, error) {
	return bindataRead(
		_webStaticScriptJs,
		"web/static/script.js",
	)
}

func webStaticScriptJs() (*asset, error) {
	bytes, err := webStaticScriptJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/static/script.js", size: 1675, mode: os.FileMode(420), modTime: time.Unix(1467850486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webStaticStyleCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x59\xe9\x73\xda\x4a\x12\xff\x9e\xbf\x42\x95\x57\xa9\x67\xca\x08\x4b\x02\x12\xe0\x55\x6a\x97\xe0\x84\xe3\x61\x3f\x42\xfc\x8c\xad\x6f\x3a\x06\x31\x30\x3a\x4a\x12\xe7\xd6\xfe\xef\xdb\xa3\xcb\x3a\x46\x1c\xb1\xf3\x61\xb7\xb6\x94\x18\xa9\xbb\xa7\xbb\xa7\x8f\xdf\x68\x34\xff\xc4\xa6\x63\xbb\x3e\xb7\x76\xc9\xd5\xc2\xf7\x9d\xce\xcd\xcd\xdc\xb6\x7c\xaf\x66\xd8\xb6\x41\x90\xe2\x60\xaf\xa6\xd9\xe6\x8d\xe6\x79\xff\x98\x2b\x26\x26\xfb\xcf\x7f\x79\x5b\x85\xe8\x95\x3f\xde\x01\x63\x6d\xf9\xdc\xbf\xde\x71\x9c\x6a\xef\x78\x6f\xa1\xe8\xf6\xb6\xc3\x09\x9c\x28\x38\x3b\xae\x09\xff\x79\xfa\xc7\x35\x54\xe5\x4a\xa8\x72\xd1\xbf\x9a\x04\x43\x39\x6e\x81\xb0\xb1\xf0\x3b\x5c\x5d\x00\x61\x4a\x20\x68\x0e\x8f\x4d\xe1\x43\xf0\x80\x2d\xc4\x17\x44\x4c\xc5\x35\xb0\xd5\xe1\x78\xb1\x49\x2d\x08\x70\x13\xb3\x78\xd3\x3e\xf0\x0e\x72\x3d\x07\x69\x3e\xde\x20\xaa\x29\x66\x6d\x91\xba\xc2\x7e\x09\xb7\x84\x6a\x7b\xd8\xc7\x36\xd8\x52\x54\xcf\x26\x6b\x1f\x51\xaa\x8f\x76\x3e\xaf\x10\x6c\x00\x5d\x43\x96\x8f\xdc\x80\x6a\x3b\x89\xdf\x81\x1b\xbe\xab\x58\xde\xdc\x76\xcd\x0e\x17\xdc\x12\xc5\x47\xf2\x95\x50\x49\x3b\x73\x4c\xe6\x18\x6f\x8b\x75\x7f\xd1\xe1\xa4\xd0\xd1\x7f\xc7\x39\xf0\x1c\xc5\x0a\x13\xa1\x68\x2b\xc3\x05\x9a\xde\xe1\x7e\x93\x04\x7a\xd1\x61\x9a\x4d\x6c\x17\x28\xf3\x16\xbd\x28\x45\xc7\x9e\x43\x94\x7d\x87\x53\x89\xad\xad\x28\x85\xe6\x9d\xf7\xf0\x01\xe2\x20\x35\x33\x49\x11\x8e\x84\x84\x4e\x5e\x48\x82\x93\xaa\x81\x20\x41\xbf\x49\x2d\x7a\x41\xda\x39\x29\x24\x88\x88\x5e\x94\x50\x8f\x08\x0d\x7a\x51\x42\x23\x24\x08\x0a\xbd\x28\xa1\x19\x11\x04\x5a\x37\x71\x5d\xe5\xcb\xa9\x55\x29\x06\x9e\xb7\x5d\x1c\x54\x0a\x8c\x09\x4b\x85\x19\x7b\xb6\xd8\x09\x76\x94\x01\xa8\xbc\x0f\xb9\x04\x74\x54\x04\xc3\x50\xd4\x10\xae\x8e\x5c\x5e\xb5\x7d\xdf\x86\x3c\xd2\xc9\x43\xd0\xb0\x1e\xcc\x26\xcc\x08\xd4\x8f\x05\xc1\x7d\xff\xfe\xac\x40\x1f\x31\xab\xcc\xa1\x12\x0b\x6d\x88\x2d\x0f\xf9\x41\xd8\x3e\xb2\xc2\x56\x6f\x56\x18\x6e\xc4\x2d\x17\x9a\xb9\x28\xff\x6c\x07\x6b\x9e\xa9\x10\x12\x38\x97\xaa\x2f\xf1\x53\x33\x53\xbe\x35\x50\x93\x0e\x1b\x3c\xf2\xd4\x34\xef\x2a\x3a\x5e\x7b\x30\x40\x0c\xeb\x31\xc5\x77\xa9\xa7\x0c\x81\x62\x04\x24\xc6\xf4\xdb\x95\x6a\xc2\x0f\x0b\x31\x90\x90\x9a\xcd\x2a\xf7\xf2\x47\xa8\x35\x32\x60\x15\x75\xb9\xbd\x41\xee\x9c\x50\x13\x0b\xac\xeb\xc8\xca\xcd\x24\x5b\x07\x61\x01\x08\x79\x99\x54\xd2\x52\x2d\x4b\x61\xf8\x77\x5d\xf1\x95\x0e\x36\x15\x03\xdd\x78\x1b\xe3\x7a\x67\x92\x3f\x54\xc5\x43\x1f\x1b\xd5\xc9\x6d\xbb\xa1\xce\xb6\x86\x6e\x3e\xee\x35\x89\x6c\xd4\xa5\x80\xef\x7e\x34\xb6\x43\xfc\x85\xa8\xe6\xfd\x46\xee\x93\xb5\x7c\x10\xb0\xfe\x34\x35\xc7\x0f\x06\x9e\x1c\x1a\xc6\x64\x70\x2f\xc9\xfb\x2f\x92\xfc\x34\x3a\x28\xb3\xf6\x7a\xf2\x63\xb8\x1b\x2f\xbf\xe2\xe1\x60\xe1\xab\xfd\xe6\x61\xf2\x63\x64\xeb\x83\xe9\xf6\x2f\xdc\xda\xe8\x75\xbd\x3e\xb6\xb4\xc3\xd8\x6c\xef\xe5\x7d\x6b\x7f\x77\xdb\xdd\x8e\xeb\x74\xfc\xf0\x7a\xd2\x9f\x12\xd9\xba\x83\xdf\x9d\xa3\x9a\x8f\x0b\x6d\xa5\xef\x9f\x67\x53\x47\x9e\x35\x85\x61\x9f\xac\x40\x8f\xa5\x99\xdf\x56\xe0\x4b\xf0\xab\xcc\x1e\xd7\xfa\xb7\xc7\xb5\xf2\x34\xa5\x36\x36\xcf\xa6\x43\x9e\xeb\xd3\x9e\x5a\x7f\x5c\x07\x7e\x0a\xa3\x0d\xea\x0d\x0d\x74\xfb\xb5\x3d\x5c\x76\xd7\xf7\x3f\xe0\xfe\x21\xbc\xbf\x0b\xe8\xc3\x14\x9d\xde\x7f\xa5\xf4\x6b\x98\x8f\xa0\xd6\xbb\x86\x2a\xc9\xa6\x26\x3d\x0a\x30\x9f\xed\x08\x64\xb4\xfa\x74\xa3\xf5\xc4\xa5\x2a\xed\x36\x1a\xc4\x65\x78\xe8\x6e\xa9\xff\x54\x57\xc4\xdb\x68\xfd\x6f\x4b\xf0\xa7\x49\xc7\x8c\x97\x5d\x3c\x3e\x34\x5a\x21\xef\xcb\x46\x36\xe5\x83\xfc\xf4\x9d\xda\x81\x31\x7f\x43\x7c\x02\x3b\xfe\xb3\xd4\xf6\xd4\x3a\xd8\xc7\x77\xa1\xbe\xdb\x6e\xc2\x53\xeb\x5f\x16\xcf\x12\x11\xd0\x03\xe4\xa1\xd7\xd8\x81\xaf\x9b\xc9\x72\xbb\x51\xe9\xfc\x66\xdf\xf6\xd3\xfa\x68\x01\x73\x25\xaa\xf5\xfd\x7a\xd2\x6b\xaf\xe4\x99\x7c\x98\x2c\x77\x7b\x79\x76\x2f\x0c\x07\x06\x9d\x1f\xe8\x5a\x45\xbf\xba\x23\x0f\xa6\x36\xcd\x0f\xd8\x20\x10\x47\x5b\x9e\x11\x4b\x19\xa4\x7c\xea\xcb\x8e\xda\xdf\xb6\x87\xd6\xe3\x5e\xed\x19\x4b\x99\xea\xef\xad\xf0\xb0\xd7\xa2\xfa\x0f\xba\xa9\x5d\x0f\xbb\x9f\x3f\xff\x1e\x54\x6d\xba\xb0\x62\xec\x33\x68\xc3\x40\xc3\x5f\xd1\x15\x56\x71\xab\xb4\xa4\x39\xe1\x43\xf8\x4b\x7b\xb7\x1a\xae\x15\xbc\x07\x45\x7a\x45\x1f\x73\x9d\x53\xa9\x64\x24\xc2\x21\xf9\xee\x12\x9b\x95\x4a\xd1\x05\x0a\xd1\xa1\xd9\x17\x37\xf2\xda\xd9\xba\xca\x66\xf3\x36\xda\x5e\xa1\xe5\x75\x70\xf5\x82\x08\x21\x4c\xa4\x21\x30\x91\x8c\x56\xe2\x2c\x32\xe7\x47\xa6\x21\xe7\xe5\x7d\xa4\x20\x95\x5e\x29\x98\x56\xfe\x8f\x45\xbf\x06\x8b\x80\x1f\x5c\xb8\x0c\x8b\xbe\x96\x60\xd1\xdf\x6f\xac\xaf\x0c\xdb\xee\x43\x7d\xe6\x73\x19\xb6\x41\x5e\x03\x8c\xf1\x94\x59\x93\x3c\x3f\x8d\x06\x49\x5c\x6f\x1b\xad\xb1\x14\xe5\x63\x30\x82\xb8\x7e\x87\x78\xd1\x31\x34\x56\xe1\xaf\x2e\x91\x95\xde\x37\x52\x38\xb6\x20\xca\x4c\xb7\x75\x2a\xf7\xd0\x0d\xe6\x28\x9b\xc4\x53\x6f\x69\xbd\x8c\xbc\x3f\x7b\xf7\x41\xde\xfe\x04\x3a\x9d\x47\x90\x77\xa8\x9f\x37\xc7\xb5\xc2\x7a\x2f\xe6\xf0\xad\x79\xbe\x68\x0a\x0a\xf3\xb2\x17\xa1\x21\xc3\x50\xb9\x0b\x5c\xb9\x83\x17\xc2\xe6\xaf\x33\xfb\xcb\xcd\xc5\x38\x57\x83\xd7\x3e\xeb\x0d\x5f\x26\x33\xaf\x7d\x45\x23\x35\x6d\xed\xba\x28\xda\x01\xe7\x36\x20\x9e\xbf\x27\xf0\xa2\x3b\x87\xbd\x1b\x7b\xeb\x91\x13\x28\x65\x1c\x78\x6c\xe9\x68\x07\xbb\x60\xa6\x0b\x16\xec\xba\x18\xf6\x3b\x9c\x6b\xfb\xb0\x6d\xac\xeb\x57\x62\xbc\x6c\xf1\x6d\x41\x47\x46\xb4\x5b\xf2\xce\x97\x2d\xee\x58\x8f\xca\x9f\x2b\x97\x4c\xac\x51\x98\xd8\xa9\xd5\x90\x29\x9e\xc9\x46\xa2\x5c\x2a\x93\x4e\x02\x97\x88\x8a\x39\xd1\x9a\xb6\x50\x2c\xd8\xff\x19\x4c\x0b\xd9\x2f\x1e\x74\x3f\x13\x7e\xf1\x90\x98\x9b\x2d\xc6\x1e\x95\x15\x9e\x0b\x32\x74\x61\x82\xce\xcc\x4f\xda\x81\xd8\xd9\x68\xd7\x97\xf5\x3e\xd8\x41\x7a\x1c\x82\x77\x01\x88\x5f\x35\x15\x8e\x2c\x27\x50\x65\x67\x15\xd9\x3f\xa9\x26\x3d\xcf\x58\x57\x7e\xee\x97\x28\x4c\x2b\xfa\x09\x05\x65\xc5\x12\xb7\x65\x95\x2b\xf0\x91\x5e\xda\xb5\x27\xa3\x6c\xaf\xfd\xf0\xf1\x82\x90\x66\xc7\x5c\x1a\x3f\x18\xcd\x1e\xc7\xeb\x28\xf8\x74\x94\xa8\x3e\x19\xc9\xac\x23\xb9\x3e\xb0\x6c\x0b\x31\x6a\x3e\x21\x17\xeb\x3b\x66\x15\x48\x49\x4e\xd6\xce\xcb\x3a\xc0\x86\xf1\x48\x82\x0d\x1b\x0d\x86\x60\x11\x31\xea\x39\xa9\x63\x40\x24\xb2\x65\x13\xa5\xff\xeb\x78\xc2\x44\xe4\xb5\x93\xeb\x9b\xf2\x15\xf5\xbf\x60\x45\x3b\xdd\xcc\xd2\x47\xa9\x14\x5b\x32\xbc\xd3\x3d\x7e\x99\xaa\x33\x5b\xff\x22\xa5\x65\x4d\x7f\x81\x12\x76\x21\xa4\x5a\x23\xc1\xd0\x58\x80\x22\xe8\xf1\xd6\x09\xaf\xc0\x21\x47\xa1\xc5\xc4\x4c\x4d\xc6\x2b\xf1\x13\x38\xa5\xad\x55\xac\xf1\x2a\x3a\x60\xe4\x5e\x41\x8b\x7d\x82\xb7\x4b\xb1\xd6\x68\x07\xaf\xa0\x1f\x69\xbe\x6b\x9f\x5a\x95\x10\xc5\xaa\x6c\x9c\xbe\x44\x05\x23\xc3\xaf\xf6\xa9\xb8\x0a\x5c\xec\x11\xa3\x50\x7e\xd6\xad\x6a\xe9\xea\x72\xde\xf8\x33\xd6\x9e\x2a\x7b\x09\x7a\x6d\x20\x5f\x1d\xc5\x93\xc8\x25\x9c\x07\x5a\xa5\x67\x46\x65\xa2\x27\x45\x92\x8e\xcb\xbc\x8f\x44\xb0\x5b\x2d\x30\x19\x2b\x5a\x72\x70\x14\xaf\xb8\xef\x16\xbe\x49\xaa\xef\x54\x5b\xdf\x67\x96\xdb\xf8\x0c\x21\x77\x30\xf0\x22\xc8\x38\xab\x4a\x9f\x43\x6a\xa4\x46\xf6\x37\xe1\xb7\x27\xa1\x21\x0c\x45\x41\x9c\x8b\x58\x18\xde\x80\x79\x0b\x79\xb5\xa5\x63\x04\x1b\xc3\xf8\xab\xfc\x8b\xba\xe4\xe0\x26\xc5\x0d\x72\x92\x12\x09\x0f\x22\x34\xfa\x29\x3f\x6a\xc5\x23\xcc\x28\x01\xe5\x12\xe5\x9c\xe0\xd4\x23\x3c\x39\xed\x70\xef\xc3\xb3\xd3\xf7\x34\x0e\xff\x09\x00\x00\xff\xff\x42\xcc\xfd\xc8\x7a\x1d\x00\x00")

func webStaticStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_webStaticStyleCss,
		"web/static/style.css",
	)
}

func webStaticStyleCss() (*asset, error) {
	bytes, err := webStaticStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/static/style.css", size: 7546, mode: os.FileMode(420), modTime: time.Unix(1467848083, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"web/static/index.html": webStaticIndexHtml,
	"web/static/script.js": webStaticScriptJs,
	"web/static/style.css": webStaticStyleCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"web": &bintree{nil, map[string]*bintree{
		"static": &bintree{nil, map[string]*bintree{
			"index.html": &bintree{webStaticIndexHtml, map[string]*bintree{}},
			"script.js": &bintree{webStaticScriptJs, map[string]*bintree{}},
			"style.css": &bintree{webStaticStyleCss, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: AssetInfo, Prefix: k}
	}
	panic("unreachable")
}
